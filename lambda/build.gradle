plugins {
    id 'java'
}

repositories {
    jcenter()
}

dependencies {

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.13.2'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    useJUnitPlatform()
}

def buildLambdaPath = "${projectDir}/build_lambda"

jar {
    manifest {
        attributes 'Main-Class': 'com.davidagood.cdkjava.ExampleHandler'
    }

    destinationDir file(buildLambdaPath)

    from compileJava
    from processResources

    // AWS Lambda seems to require the code to be in the lib directory
    into('lib') {
        from configurations.runtimeClasspath
    }

}

// Based on https://github.com/xword/java-npm-gradle-integration-example
// declare a dedicated scope for publishing the packaged JAR
configurations {
    lambdaResources
}

configurations.default.extendsFrom(configurations.lambdaResources)

// expose the artifact created by the packaging task
artifacts {
    lambdaResources(jar.archivePath) {
        builtBy jar
        type 'jar'
    }
}

clean {
    delete buildLambdaPath
}